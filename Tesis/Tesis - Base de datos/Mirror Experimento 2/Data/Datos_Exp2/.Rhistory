(1/3)^(1/2)
0^(1/2)
3^(1/2)
(3^(1/2))^(1/2)
((3^(1/2))^(1/2))*12
((3^(1/2))^(2))*12
3*12
4/12
(1/3)^(1/2)
0^(1/2)
(5/3)^(1/2)
(2)^(1/2)
2^(5/2)
(2^(5/2))*3
(2^(3/2))*5
(-2^(3/2))*5
(-2^(5/2))*3
(1/2)^(1/2)
x <- c(-5,10)
x <- c(-5:10)
y <- (-x^2)+(5*x)
y
plot(x,y)
points(x[5])
9^(1/2)
6*6
6*6*6
25*3
(75/216)-(25/6)
216*36
(75/216)-(25/36)
36*75
216*25
2700-5400
2700/776
2700/7776
216*36
216-36
21636
216+36
7776/6
252/6
7776/12
7776/36
7776/216
252/216
252/216252/36
252/36
7*7
432+42
474/36
474/7776
(-1/216)-(1/26)-(2/6)
216/3
216/6
2*36
6*36
73+72
145/216
216/36
6*25
216/36
135/216
18/6
28^(1/2)
2/3
2/6
2^5
0/4
sqrt(2.5)
q()
0.5/sqrt(2.5)
rnorm(0,1,10000)
x <- rnorm(100000,0,1)
plot(x)
rm(list=ls())
x<-rnorm(100000,mean=10, sd=2)
hist(x,breaks=150,xlim=c(0,20),freq=FALSE)
rm(list=ls())
x   <- seq(5,15,length=1000)
y   <- dnorm(x,mean=10, sd=3)
plot(x,y, type="l", lwd=1)
population_mean <- 0
population_sd <- 1
upper_bound <- population_mean + population_sd * sd_to_fill
sd_to_fill <- 1
lower_bound <- population_mean - population_sd * sd_to_fill
# Generates equally spaced values within 4 standard deviations of the mean
# This is used to connect the points on the curve so the more points the better
x <- seq(-4, 4, length = 1000) * population_sd + population_mean
# Returns the height of the probably distribution at each of those points
y <- dnorm(x, population_mean, population_sd)
# Generate the plot, where:
# - type: the type of plot to be drawn where "n" means do not plot the points
# - xlab: the title of the x axis
# - ylab: the title of the y axis
# - main: the overall title for the plot
# - axes: when false it suppresses the axis automatically generated by the high level plotting function so that we can create custom axis
plot(x, y, type="n", xlab = "Height (inches)", ylab = "", main = "Distribution of Men's Heights", axes = FALSE)
rm(list=ls())
x<- seq(-4,4,0,01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximación mediante una Z")
abline(v=-0.316)
abline(v=0.316)
x<- seq(-4,4,0.01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximación mediante una Z")
abline(v=-0.316)
abline(v=0.316)
x<- seq(-4,4,0.01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximación mediante una Z", xlab="X", ylab="f(X)")
abline(v=-0.316)
abline(v=0.316)
x<- seq(-4,4,0.01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximando mediante una Z", xlab="X", ylab="f(X)")
abline(v=-0.316)
abline(v=0.316)
points(-1,0.8,"x=-0.316...")
points(1,0.8,"x=0.316...")
x<- seq(-4,4,0.01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximando mediante una Z", xlab="X", ylab="f(X)")
abline(v=-0.316)
abline(v=0.316)
points(-1,0.8,"x=-0.316...")
points(1,0.8,"x=0.316...")
rm(list=ls())
x<- seq(-4,4,0.01)
y<- (1/2*sqrt(3.1416))*2.718^(-x^2)
plot(x,y,type="l",main="Aproximando mediante una Z", xlab="X", ylab="f(X)")
abline(v=-0.316)
abline(v=0.316)
points(-1,0.8,"x=-0.316...")
points(1,0.8,"x=0.316...")
text(-1,0.8,"x=-0.316...")
text(1,0.8,"x=0.316...")
q()
rm(list=ls())
# Preguntas
x_ss <- c(5150,5300,5450,5150,5300,5150,
6050,6200,6350,6050,6200,6050,
5150,5600,6050,5150,5600,5150,
1150,1250,1350,1150,1250,1150)
x_ll <- c(5300,5450,5600,5450,5600,5600,
6200,6350,6500,6350,6500,6500,
5600,6050,6500,6050,6500,6500,
1250,1350,1450,1350,1450,1450)
t_ss <- c(1,2,3,1,2,1,
7,8,9,7,8,7,
1,4,7,1,4,1,
1,4,7,1,4,1)
t_ll <- c(2,3,4,3,4,4,
8,9,10,9,10,10,
4,7,10,7,10,10,
4,7,10,7,10,10)
data.frame(x_ss,x_ll,t_ss,t_ll)
exp(0.21)
x <- seq(-10,10,0,01)
y=x^2
z=-x^2
layout 1:2
plot(x,y,type="l")
plot(x,z,type="l")
x <- seq(-10,10,0.01)
y=x^2
z=-x^2
layout 1:2
plot(x,y,type="l")
plot(x,z,type="l")
x <- seq(-10,10,0.01)
y=x^2
z=-x^2
par(mfrow=c(1,2))
plot(x,y,type="l")
plot(x,z,type="l")
x <- seq(-10,10,0.01)
y=x^2
z=-x^2
w=x
par(mfrow=c(1,3))
plot(x,y,type="l")
plot(x,z,type="l")
plot(x,w,type="l")
x <- seq(-10,10,0.01)
y=x^2
z=-x^2
w=x
t=-x
par(mfrow=c(2,2))
plot(x,y,type="l")
plot(x,z,type="l")
plot(x,w,type="l")
plot(x,t,type="l")
x <- seq(-10,10,0.01)
y=x^2
z=-x^2
w=x
t=-x
par(mfrow=c(2,2))
plot(x,y,type="l", main="Parábola 1")
plot(x,z,type="l", main="Parábola 2")
plot(x,w,type="l", main="Recta 1")
plot(x,t,type="l", main="Recta 2")
q()
x <- seq(0.01, 10, 0,01)
y=4/x
z=10-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^(1)),ylab=expression(x^(2)))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 10, 0.01)
y=4/x
z=10-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^(1)),ylab=expression(x^(2)))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 5, 0.01)
y=4/x
z=5-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 5, 0.01)
y=4/x
z=5-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,1),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 5, 0.01)
y=4/x
z=5-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,5),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 5, 0.01)
y=4/x
z=4-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,5),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(0,4.2,expression(y==4))
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(0,4.2,expression(4-p[1]x^1-p[2]x^2==0))
text(0,4.2,expression(4-p[1]*x^1-p[2]*x^2==0))
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
w=2/x
t=6/x
plot(x,y,type="l",main="Demanda Marshalliana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l",col="red")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(0.3,4.2,expression(4-p[1]*x^1-p[2]*x^2==0))
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
a <- seq(0.01,3,0.01)
b <- seq(0.01,5,0.01)
w=3-a
t=5-b
plot(x,y,type="l",col="red",main="Demanda Hicksiana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l")
lines(x,w,type="l",lty=5)
lines(x,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
y=4/x
z=4-x
a <- seq(0.01,3,0.01)
b <- seq(0.01,5,0.01)
w=3-a
t=5-b
plot(x,y,type="l",col="red",main="Demanda Hicksiana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l")
lines(a,w,type="l",lty=5)
lines(b,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(10,0.8,expression(u=u[0]))
text(0.8,10,expression(u=u[0]))
text(0.8,10,expression(u==u[0]))
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
a <- seq(0.01,3,0.01)
b <- seq(0.01,5,0.01)
w=3-a
t=5-b
plot(x,y,type="l",col="red",main="Demanda Hicksiana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l")
lines(a,w,type="l",lty=5)
lines(b,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(0.7,10,expression(u==u[0]))
x <- seq(0.01, 4, 0.01)
y=4/x
z=4-x
a <- seq(0.01,3,0.01)
b <- seq(0.01,5,0.01)
w=3-a
t=5-b
plot(x,y,type="l",col="red",main="Demanda Hicksiana",xlab=expression(x^1),ylab=expression(x^2),xlim=c(0,4),ylim=c(0,10))
lines(x,z,type="l")
lines(a,w,type="l",lty=5)
lines(b,t,type="l",lty=5)
points(2,2,pch=15)
text(1.8,2,expression(x[1](2,2)))
text(0.7,10,expression(u(x^1,x^2)==u[0]))
q()
lines(c(0, 0.1),c(6,6), lwd=2, lty=2, col="green")
# clears workspace:
rm(list=ls())
# sets working directories:
setwd("~/Desktop/Felisa/Tesis/Tesis - Base de datos/Mirror Experimento 2/Data/Datos_Exp2")
library(R2jags)
#dataset <- 1
#if (dataset == 1) #Demo
#{
#  k <- 3 #number of cases
#  data <- matrix(c(70, 50, 30, 50, 7, 5, 3, 5, 10, 0, 0, 10), nrow=k, ncol=4, byrow=T)
#}
#if (dataset == 2) #Lehrner et al. (1995) data
#{
#  k <- 3 #number of cases
#  data <- matrix(c(148, 29, 32, 151, 150, 40, 30, 140, 150, 51, 40, 139), nrow=k, ncol=4, byrow=T)
#}
#f <- data[,2]
#h <- data[,1]
#MI <- data[,3]
#CR <- data[,4]
#s <- h + MI
#n <- f + CR
k <- 20
for(archive in dir()){
participante <- read.csv(archive)
fa_AN <- NULL
rej_AN <- NULL
hits_AS <- NULL
miss_AS <- NULL
fa_BN <- NULL
rej_BN <- NULL
hits_BS <- NULL
miss_BS <- NULL
{ fa_AN <- sum(participante$Falsas.alarmas[participante$Estimulo>=161&participante$Estimulo<=320]=='True')
rej_AN <- sum(participante$Rechazos[participante$Estimulo>=161&participante$Estimulo<=320]=='True')
hits_AS <- sum(participante$Hits[participante$Estimulo>=1&participante$Estimulo<=160]=='True')
miss_AS <- sum(participante$Omisiones[participante$Estimulo>=1&participante$Estimulo<=160]=='True')
fa_BN <- sum(participante$Falsas.alarmas[participante$Estimulo>=481&participante$Estimulo<=640]=='True')
rej_BN <- sum(participante$Rechazos[participante$Estimulo>=481&participante$Estimulo<=640]=='True')
hits_BS <- sum(participante$Hits[participante$Estimulo>=321&participante$Estimulo<=480]=='True')
miss_BS <- sum(participante$Omisiones[participante$Estimulo>=321&participante$Estimulo<=480]=='True')
FAr_an <- fa_AN/160
Hr_as <- hits_AS/160
FAr_bn <- fa_BN/160
Hr_bs <- hits_BS/160
s_A <- hits_AS+miss_AS
s_B <- hits_BS+miss_BS
n_A <- fa_AN+rej_AN
n_B <- fa_BN+rej_BN
print(c(fa_AN[length(fa_AN)],
FAr_an[length(FAr_an)],
fa_BN[length(fa_BN)],
FAr_bn[length(FAr_bn)],
hits_BS[length(hits_BS)],
Hr_bs[length(Hr_bs)],
hits_AS[length(hits_AS)],
Hr_as[length(Hr_as)]))
}
data <- list("hits_AS", "fa_AN", "hits_BS", "fa_BN", "s_A", "n_A", "s_B", "n_B") # to be passed on to JAGS
myinits <- list(
list(d_A=0, c_A=0, d_B=0, c_B=0))
# parameters to be monitored:
parameters <- c("d_A", "d_B", "c_A", "c_B", "thetah_A", "thetah_B", "thetaf_A", "thetaf_B")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file ="~/Desktop/Felisa/Tesis/Codigos/MEx2_1stText.txt",
n.chains=1, n.iter=10000, n.burnin=1, n.thin=1)
}
# Now the values for the monitored parameters are in the "samples" object,
# ready for inspection.
for(d in k){
d_A <- samples$BUGSoutput$sims.list$d_A[,k]
d_B <- samples$BUGSoutput$sims.list$d_B[,k]
}
for(c in k){
c_A <- samples$BUGSoutput$sims.list$c_A[,k]
c_B <- samples$BUGSoutput$sims.list$c_B[,k]
}
for(h in k){
h_A <- samples$BUGSoutput$sims.list$thetah_A[,k]
h_B <- samples$BUGSoutput$sims.list$thetah_B[,k]
}
for(f in k){
f_A <- samples$BUGSoutput$sims.list$thetaf_A[,k]
f_B <- samples$BUGSoutput$sims.list$thetaf_B[,k]
}
#c1 <- samples$BUGSoutput$sims.list$c[,1]
#c2 <- samples$BUGSoutput$sims.list$c[,2]
#c3 <- samples$BUGSoutput$sims.list$c[,3]
#h1 <- samples$BUGSoutput$sims.list$thetah[,1]
#h2 <- samples$BUGSoutput$sims.list$thetah[,2]
#h3 <- samples$BUGSoutput$sims.list$thetah[,3]
#f1 <- samples$BUGSoutput$sims.list$thetaf[,1]
#f2 <- samples$BUGSoutput$sims.list$thetaf[,2]
#f3 <- samples$BUGSoutput$sims.list$thetaf[,3]
#make the four panel plot:
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
#layout.show(4)
#some plotting options to make things look better:
par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5,
font.lab = 2, cex.axis = 1.3, bty = "n", las=1)
# Discriminability panel:
plot(density(d1), lwd=2, col="red", main="", ylab="", xlab="",
xlim=c(-2,6), axes=F)
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(d2), lwd=2, col="green", lty=2)
lines(density(d3), lwd=2, col="blue", lty=2)
mtext("Probability Density", side=2, line = 2, cex=1.5, las=0)
mtext("Discriminability", side=1, line = 2.5, cex=1.5)
# Bias panel:
plot(density(c1), lwd=2, col="red", main="", ylab="", xlab="",
xlim=c(-2,2), axes=F)
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(c2), lwd=2, col="green", lty=2)
lines(density(c3), lwd=2, col="blue", lty=2)
mtext("Probability Density", side=2, line = 2, cex=1.5, las=0)
mtext("Bias", side=1, line = 2.5, cex=1.5)
# Hit Rate panel:
plot(density(h1), lwd=2, col="red", main="", ylab="", xlab="",
xlim=c(0,1), axes=F)
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(h2), lwd=2, col="green", lty=2)
lines(density(h3), lwd=2, col="blue", lty=2)
if (dataset == 1)
{
lines(c(0, 0.1),c(7,7), lwd=2, lty=1, col="red")
lines(c(0, 0.1),c(6,6), lwd=2, lty=2, col="green")
lines(c(0, 0.1),c(5,5), lwd=2, lty=3, col="blue")
text(0.15, 7, labels="first", offset=0, cex = 1.3, pos=4)
text(0.15, 6, labels="second", offset=0, cex = 1.3, pos=4)
text(0.15, 5, labels="third", offset=0, cex = 1.3,pos=4)
}
if (dataset == 2)
{
lines(c(0, 0.1),c(7,7), lwd=2, lty=1, col="red")
lines(c(0, 0.1),c(6,6), lwd=2, lty=2, col="green")
lines(c(0, 0.1),c(5,5), lwd=2, lty=3, col="blue")
text(0.15, 7, labels="Control", offset=0, cex = 1.3, pos=4)
text(0.15, 6, labels="Group I", offset=0, cex = 1.3, pos=4)
text(0.15, 5, labels="Group II", offset=0, cex = 1.3,pos=4)
}
mtext("Probability Density", side=2, line = 2, cex=1.5, las=0)
mtext("Hit Rate", side=1, line = 2.5, cex=1.5)
# False-Alarm Rate panel:
plot(density(f1), lwd=2, col="red", main="", ylab="", xlab="",
xlim=c(0,1), axes=F)
axis(1)
axis(2, labels=F, at=c(0,24))
lines(density(f2), lwd=2, col="green", lty=2)
lines(density(f3), lwd=2, col="blue", lty=2)
mtext("Probability Density", side=2, line = 2, cex=1.5, las=0)
mtext("False-Alarm Rate", side=1, line = 2.5, cex=1.5)
