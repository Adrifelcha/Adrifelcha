title(archive, outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='', ylab='' )
#axis(1,at=1:5,labels=c("Blue","Red", "Orange", "Purple", "Green"))
#axis(2,at=c(0, 10, 20, 30, 40,50),labels=c("0", "10","20","30","40", "50"),las=1)
#points(fa,type='o',pch=16,col='red')
#mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
#mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
#text(2,30,paste('F.A.'),cex=1,col='red',f=2)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col =c("dodgerblue3","firebrick3", "chocolate3", "darkorchid4", "forestgreen"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3,5.5),labels=c("Blue","Red", "Orange", "Purple", "Green"))
text(0.7,fa[1]+5,paste(fa[1]),cex=1,col='black',f=1)
text(1.9,fa[2]+5,paste(fa[2]),cex=1,col='black',f=1)
text(3.1,fa[3]+5,paste(fa[3]),cex=1,col='black',f=1)
text(4.3,fa[4]+5,paste(fa[4]),cex=1,col='black',f=1)
text(5.5, fa[5]+5,paste(fa[5]), cex=1,col='black',f=1)
mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per color',3,cex=1.2, font=2)
}
#####################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:2,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
#index <- which(jaime$facilidad=='muchos')
#for(i in index){
#  jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
#
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#plot(hits,type='o',pch=16,col='blue',ylim=c(50,100),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(50, 60, 70, 80, 90, 100),labels=c("50","60","70","80","90","100"),las=1)
#points(fa,type='o',pch=16,col='red')
##mtext(archive,3,cex=.8)
#text(3.5,90,paste('Hits'),cex=1,col='blue',f=2)
#title("Hits & F. Alarms per No. External Circles", outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue1","dodgerblue2","dodgerblue3","dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per External Circles',3,cex=1.2, font=2)
title('Experiment 1 - P.13', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(0, 10, 20, 30, 40, 50),labels=c("0", "10","20","30","40","50"),las=1)
#points(fa,type='o',pch=16,col='red')
#text(1.5,40,paste('F.A'),cex=1,col='red',f=2)
#mtext("(Experiment 2)", 3, line=3, col='black', cex=1, font=3)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("firebrick1","firebrick2","firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per External Circles',3,cex=1.2, font=2)
title(archive, outer = TRUE, line = -2)
}
############################3
#Hits y Falsas Alarmas x Color
rm(list=ls())
layout(matrix(1:2,ncol=2, byrow = TRUE))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$color <- as.character(jaime$color)
cafe <- strsplit(as.character(jaime$color),split='-')
#index <- which(jaime$facilidad=='muchos')
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$color))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$color==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$color==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5 , font.lab = 2, cex.axis = 1.3, bty = "n", las=1)
#plot(hits,type='o',pch=16,col='blue',ylim=c(40,90),axes=F , xlab="", ylab="")
#axis(2,at=c(40, 50, 60, 70, 80, 90),labels=c("40", "50","60","70","80", "90"),las=1)
#axis(1,at=1:5,labels=c("Blue","Red", "Orange", "Purple", "Green"))
#points(fa,type='o',pch=16,col='red')
#text(2,70,paste('Hits'),cex=1,col='blue',f=2)
#mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
#mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
#mtext(archive,3,cex=.8)
#title(archive, outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue3","firebrick3", "chocolate3", "darkorchid4", "forestgreen"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3,5.5),labels=c("Blue","Red", "Orange", "Purple", "Green"))
text(0.7,hits[1]+5,paste(hits[1]),cex=1,col='black',f=1)
text(1.9,hits[2]+5,paste(hits[2]),cex=1,col='black',f=1)
text(3.1,hits[3]+5,paste(hits[3]),cex=1,col='black',f=1)
text(4.3,hits[4]+5,paste(hits[4]),cex=1,col='black',f=1)
text(5.5,hits[5]+5,paste(hits[5]),cex=1,col='black',f=1)
mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per color',3,cex=1.2, font=2)
title('Experiment 1 - p. 6', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='', ylab='' )
#axis(1,at=1:5,labels=c("Blue","Red", "Orange", "Purple", "Green"))
#axis(2,at=c(0, 10, 20, 30, 40,50),labels=c("0", "10","20","30","40", "50"),las=1)
#points(fa,type='o',pch=16,col='red')
#mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
#mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
#text(2,30,paste('F.A.'),cex=1,col='red',f=2)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col =c("dodgerblue3","firebrick3", "chocolate3", "darkorchid4", "forestgreen"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3,5.5),labels=c("Blue","Red", "Orange", "Purple", "Green"))
text(0.7,fa[1]+5,paste(fa[1]),cex=1,col='black',f=1)
text(1.9,fa[2]+5,paste(fa[2]),cex=1,col='black',f=1)
text(3.1,fa[3]+5,paste(fa[3]),cex=1,col='black',f=1)
text(4.3,fa[4]+5,paste(fa[4]),cex=1,col='black',f=1)
text(5.5, fa[5]+5,paste(fa[5]), cex=1,col='black',f=1)
mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per color',3,cex=1.2, font=2)
}
#####################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:2,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
#index <- which(jaime$facilidad=='muchos')
#for(i in index){
#  jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
#
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#plot(hits,type='o',pch=16,col='blue',ylim=c(50,100),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(50, 60, 70, 80, 90, 100),labels=c("50","60","70","80","90","100"),las=1)
#points(fa,type='o',pch=16,col='red')
##mtext(archive,3,cex=.8)
#text(3.5,90,paste('Hits'),cex=1,col='blue',f=2)
#title("Hits & F. Alarms per No. External Circles", outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue1","dodgerblue2","dodgerblue3","dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per External Circles',3,cex=1.2, font=2)
title('Experiment 1 - P.13', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(0, 10, 20, 30, 40, 50),labels=c("0", "10","20","30","40","50"),las=1)
#points(fa,type='o',pch=16,col='red')
#text(1.5,40,paste('F.A'),cex=1,col='red',f=2)
#mtext("(Experiment 2)", 3, line=3, col='black', cex=1, font=3)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("firebrick1","firebrick2","firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per External Circles',3,cex=1.2, font=2)
title(archive, outer = TRUE, line = -2)
}
############################3
#Hits y Falsas Alarmas x Color
rm(list=ls())
layout(matrix(1:2,ncol=2, byrow = TRUE))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$color <- as.character(jaime$color)
cafe <- strsplit(as.character(jaime$color),split='-')
#index <- which(jaime$facilidad=='muchos')
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$color))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$color==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$color==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#par(cex.main = 1.5, mar = c(5, 6, 4, 5) + 0.1, mgp = c(3.5, 1, 0), cex.lab = 1.5 , font.lab = 2, cex.axis = 1.3, bty = "n", las=1)
#plot(hits,type='o',pch=16,col='blue',ylim=c(40,90),axes=F , xlab="", ylab="")
#axis(2,at=c(40, 50, 60, 70, 80, 90),labels=c("40", "50","60","70","80", "90"),las=1)
#axis(1,at=1:5,labels=c("Blue","Red", "Orange", "Purple", "Green"))
#points(fa,type='o',pch=16,col='red')
#text(2,70,paste('Hits'),cex=1,col='blue',f=2)
#mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
#mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
#mtext(archive,3,cex=.8)
#title(archive, outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue3","firebrick3", "chocolate3", "darkorchid4", "forestgreen"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3,5.5),labels=c("Blue","Red", "Orange", "Purple", "Green"))
text(0.7,hits[1]+5,paste(hits[1]),cex=1,col='black',f=1)
text(1.9,hits[2]+5,paste(hits[2]),cex=1,col='black',f=1)
text(3.1,hits[3]+5,paste(hits[3]),cex=1,col='black',f=1)
text(4.3,hits[4]+5,paste(hits[4]),cex=1,col='black',f=1)
text(5.5,hits[5]+5,paste(hits[5]),cex=1,col='black',f=1)
mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per color',3,cex=1.2, font=2)
title('Experiment 1 - p. 19', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='', ylab='' )
#axis(1,at=1:5,labels=c("Blue","Red", "Orange", "Purple", "Green"))
#axis(2,at=c(0, 10, 20, 30, 40,50),labels=c("0", "10","20","30","40", "50"),las=1)
#points(fa,type='o',pch=16,col='red')
#mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
#mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
#text(2,30,paste('F.A.'),cex=1,col='red',f=2)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col =c("dodgerblue3","firebrick3", "chocolate3", "darkorchid4", "forestgreen"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3,5.5),labels=c("Blue","Red", "Orange", "Purple", "Green"))
text(0.7,fa[1]+5,paste(fa[1]),cex=1,col='black',f=1)
text(1.9,fa[2]+5,paste(fa[2]),cex=1,col='black',f=1)
text(3.1,fa[3]+5,paste(fa[3]),cex=1,col='black',f=1)
text(4.3,fa[4]+5,paste(fa[4]),cex=1,col='black',f=1)
text(5.5, fa[5]+5,paste(fa[5]), cex=1,col='black',f=1)
mtext("Color", side = 1, line = 2.5, cex = 1, font = 1)
mtext("False Alarms", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per color',3,cex=1.2, font=2)
}
############################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:2,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
#index <- which(jaime$facilidad=='muchos')
#for(i in index){
#  jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
#
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#plot(hits,type='o',pch=16,col='blue',ylim=c(50,100),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(50, 60, 70, 80, 90, 100),labels=c("50","60","70","80","90","100"),las=1)
#points(fa,type='o',pch=16,col='red')
##mtext(archive,3,cex=.8)
#text(3.5,90,paste('Hits'),cex=1,col='blue',f=2)
#title("Hits & F. Alarms per No. External Circles", outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue1","dodgerblue2","dodgerblue3","dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per External Circles',3,cex=1.2, font=2)
title('Experiment 1 - P.13', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(0, 10, 20, 30, 40, 50),labels=c("0", "10","20","30","40","50"),las=1)
#points(fa,type='o',pch=16,col='red')
#text(1.5,40,paste('F.A'),cex=1,col='red',f=2)
#mtext("(Experiment 2)", 3, line=3, col='black', cex=1, font=3)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("firebrick1","firebrick2","firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per External Circles',3,cex=1.2, font=2)
title(archive, outer = TRUE, line = -2)
}
############################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:2,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
#index <- which(jaime$facilidad=='muchos')
#for(i in index){
#  jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
#
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#plot(hits,type='o',pch=16,col='blue',ylim=c(50,100),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(50, 60, 70, 80, 90, 100),labels=c("50","60","70","80","90","100"),las=1)
#points(fa,type='o',pch=16,col='red')
##mtext(archive,3,cex=.8)
#text(3.5,90,paste('Hits'),cex=1,col='blue',f=2)
#title("Hits & F. Alarms per No. External Circles", outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue1","dodgerblue2","dodgerblue3","dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per External Circles',3,cex=1.2, font=2)
title('Experiment 1 - P.13', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(0, 10, 20, 30, 40, 50),labels=c("0", "10","20","30","40","50"),las=1)
#points(fa,type='o',pch=16,col='red')
#text(1.5,40,paste('F.A'),cex=1,col='red',f=2)
#mtext("(Experiment 2)", 3, line=3, col='black', cex=1, font=3)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("firebrick1","firebrick2","firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per External Circles',3,cex=1.2, font=2)
# title(archive, outer = TRUE, line = -2)
}
############################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:2,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
#index <- which(jaime$facilidad=='muchos')
#for(i in index){
#  jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
#
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
#plot(hits,type='o',pch=16,col='blue',ylim=c(50,100),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(50, 60, 70, 80, 90, 100),labels=c("50","60","70","80","90","100"),las=1)
#points(fa,type='o',pch=16,col='red')
##mtext(archive,3,cex=.8)
#text(3.5,90,paste('Hits'),cex=1,col='blue',f=2)
#title("Hits & F. Alarms per No. External Circles", outer = TRUE, line = -2)
barplot(hits, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("dodgerblue1","dodgerblue2","dodgerblue3","dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('Hits per External Circles',3,cex=1.2, font=2)
title('Experiment 1 - P.10', outer = TRUE, line = -2)
#plot(fa,type='o',pch=16,col='red',ylim=c(0,50),axes=F , xlab='No. External Circles', ylab='', font.lab=2)
#axis(1,at=1:4,labels=sort(unique(jaime$num_circulos_externos)))
#axis(2,at=c(0, 10, 20, 30, 40, 50),labels=c("0", "10","20","30","40","50"),las=1)
#points(fa,type='o',pch=16,col='red')
#text(1.5,40,paste('F.A'),cex=1,col='red',f=2)
#mtext("(Experiment 2)", 3, line=3, col='black', cex=1, font=3)
#mtext(archive,3,cex=.8)
barplot(fa, main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col = c("firebrick1","firebrick2","firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("2","3", "7", "8"))
mtext("Number of External Circles", side = 1, line = 2.5, cex = 1, font = 1)
mtext("Hits", side = 2, line = 3, cex = 1, font = 1, las = 0)
mtext('F. Alarms per External Circles',3,cex=1.2, font=2)
# title(archive, outer = TRUE, line = -2)
}
#Codigo Base para Analisis Parametrico y Graficacion (SDT)
#Autor: Adriana F. Chávez De la Peña
#adrifelcha@gmail.com
##########################################################
rm(list=ls())  #Limpiamos el espacio de trabajo
#####Datos a graficar#####
h<-123  #Numero crudo de Hits
f<-32   #Numero de Falsas Alarmas
h_rate<-h/150      #Tasa de Hits relativo al total de Ensayos con Se??al
fa_rate<-f/150     #Tasa de Falsas Alarmas relativa al total de Ensayos con Ruido
#####Estimaci??n Param??trica#####
k<-qnorm(1-fa_rate,0,1)   #Calculamos la localizacion del Criterio
d<-qnorm(h_rate,0,1)-qnorm(fa_rate,0,1)     #Calculamos d'
c<-k-(d/2)                                  #Calculamos el Sesgo c
beta<-dnorm(k,d,1)/dnorm(k,0,1)             #Calculamos el Sesgo Beta
soporte <- seq(-6,6,.05)        #Especificamos el Soporte de nuestras distribuciones
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_senal <- dnorm(soporte,d,1)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,d_ruido,type='l')             #Dibujamos la distribucion de ruido
lines(soporte,d_senal,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=k,col='red')                      #Dibujamos el criterio
abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
d<-round(d,5)   #Redondeamos el valor de d' a 5 decimales para facilitar su representacion
k<-round(k,5)   #Redondeamos el valor del criterio a 5 decimales para facilitar su representacion
c<-round(c,5)   #Redondeamos el valor del Sesgo c a 5 decimales para facilitar su representacion
beta<-round(beta,5) #Redondeamos el valor del Sesgo Beta a 5 decimales para facilitar su representacion
text(-4,0.39,paste("K = ",k))  #Imprimimos la localizacion del criterio
text(-5,0.34,paste("C = ",c))  #Imprimimos el valor del Sesgo C
text(-4,0.29,paste("D' = ",d)) #Imprimimos el valor de la distancia entre las medias (D')
text(-5,0.24,paste("Hit Rate = ",h_rate))            #Especificamos la Tasa de Hits
text(-4,0.19,paste("False alarm Rate = ",fa_rate))   #Especificamos la Tasa de Falsas Alarmas
############ Curvas ROC
# Una vez que hemos computado el valor de la d' que separa las distribuciones de ruido y señal
# podemos trazar una curva ROC, que nos describa todas las combinaciones posibles de tasa de
# Hits y Falsas Alarmas, dada todas las posibles combinaciones del criterio.
#Para trazar la Curva ROC, necesitamos crear un Ciclo For:
hits <- c()   #Creamos un arreglo vacío, que vamos a ir llenando con el Ciclo For, para las tasas de Hits
falarms <- c()  #Creamos un arreglo vacío para las tasas de Falsas Alarmas
bias_c <- seq(-10,10,0.1)
d_null <- 0  #Como referencia, vamos a incluir una curva ROC para una d' de 0. El sistema a evaluar será juzgado como 'más preciso' conforme su ROC se aleje de ésta función de identidad.
hits_na <- c()     #Creamos un arreglo vacío para los hits en  d' 0
falarms_na <- c()  # Creamos un arreglo vacío para las falsas alarmas en d' 0
for (i in 1:length(bias_c)){                     #Creamos un For donde, para cada posible valor del sesgo C (que relaciona directamente d' con el criterio)
hits[i] <- pnorm((-d/2)-bias_c[i])             #se compute la proporción de la distribución de señal que cae sobre el criterio
falarms[i] <- pnorm((d/2)-bias_c[i])           # y la proporción de la distribución de ruido.
hits_na[i] <- pnorm((d_null/2)-bias_c[i])      #Para referencia, realizamos el mismo cómputo para la d' de 0
falarms_na[i] <- pnorm((-d_null/2)-bias_c[i])
}
plot(fa_rate,h_rate, pch=16, col='deepskyblue4', xlim=c(0,1), ylim=c(0,1), xlab='F.A. Rate', ylab='Hit Rate')     #Ploteamos las tasas de hits y falsas alarmas obervadas como un punto en el espacio
lines(hits,falarms,lwd=2,col='deepskyblue2')        #Dibujamos la curva ROC correspondiente a la d' de nuestro sistema evaluado
lines(hits_na,falarms_na,lwd=1,col='black', lty=2)  #Dibujamos la función de identidad, que corresponde a una d' de 0 (Donde las distribuciones de ruido y señal se empalman por completo)
lines(c(0.38, 0.48),c(0.2,0.2), lwd=2, lty=1, col="deepskyblue3")
points(0.43,0.1, lty=3, pch=16, col='deepskyblue4')
text(0.5, 0.2, labels="All possible trade-offs between Hit & F.A. rates given the d'", offset=0, cex = 0.7, pos=4)
text(0.5, 0.1, labels="Observed Hit & F.A. rates given the used criterion", offset=0, cex = 0.7, pos=4)
text(0.85, 0.83, labels="d' = 0", offset=0, cex = 0.8, pos=4)
text(fa_rate-0.13, h_rate+0.02, paste("d' =", d), offset=0, cex = 0.8, pos=4)
title('ROC')
#Codigo Base para Analisis Parametrico y Graficacion (SDT)
#Autor: Adriana F. Chávez De la Peña
#adrifelcha@gmail.com
##########################################################
rm(list=ls())  #Limpiamos el espacio de trabajo
#####Datos a graficar#####
h<-133  #Numero crudo de Hits
f<-52   #Numero de Falsas Alarmas
h_rate<-h/150      #Tasa de Hits relativo al total de Ensayos con Se??al
fa_rate<-f/150     #Tasa de Falsas Alarmas relativa al total de Ensayos con Ruido
#####Estimaci??n Param??trica#####
k<-qnorm(1-fa_rate,0,1)   #Calculamos la localizacion del Criterio
d<-qnorm(h_rate,0,1)-qnorm(fa_rate,0,1)     #Calculamos d'
c<-k-(d/2)                                  #Calculamos el Sesgo c
beta<-dnorm(k,d,1)/dnorm(k,0,1)             #Calculamos el Sesgo Beta
soporte <- seq(-6,6,.05)        #Especificamos el Soporte de nuestras distribuciones
d_ruido <- dnorm(soporte,0,1)   #Definimos nuestra distribucion de Ruido de acuerdo a la teoria (Media=0 y DV=1)
d_senal <- dnorm(soporte,d,1)   #Definimos la distribucion de Se??al, con media en d'
plot(soporte,d_ruido,type='l')             #Dibujamos la distribucion de ruido
lines(soporte,d_senal,type='l',col='blue') #Dibujamos la distribucion de Se??al
abline(v=k,col='red')                      #Dibujamos el criterio
abline(v=d/2,col='blue',lty=2)             #Se??alamos la localizacion Optima (sin sesgo) del criterio
d<-round(d,5)   #Redondeamos el valor de d' a 5 decimales para facilitar su representacion
k<-round(k,5)   #Redondeamos el valor del criterio a 5 decimales para facilitar su representacion
c<-round(c,5)   #Redondeamos el valor del Sesgo c a 5 decimales para facilitar su representacion
beta<-round(beta,5) #Redondeamos el valor del Sesgo Beta a 5 decimales para facilitar su representacion
text(-4,0.39,paste("K = ",k))  #Imprimimos la localizacion del criterio
text(-5,0.34,paste("C = ",c))  #Imprimimos el valor del Sesgo C
text(-4,0.29,paste("D' = ",d)) #Imprimimos el valor de la distancia entre las medias (D')
text(-5,0.24,paste("Hit Rate = ",h_rate))            #Especificamos la Tasa de Hits
text(-4,0.19,paste("False alarm Rate = ",fa_rate))   #Especificamos la Tasa de Falsas Alarmas
############ Curvas ROC
# Una vez que hemos computado el valor de la d' que separa las distribuciones de ruido y señal
# podemos trazar una curva ROC, que nos describa todas las combinaciones posibles de tasa de
# Hits y Falsas Alarmas, dada todas las posibles combinaciones del criterio.
#Para trazar la Curva ROC, necesitamos crear un Ciclo For:
hits <- c()   #Creamos un arreglo vacío, que vamos a ir llenando con el Ciclo For, para las tasas de Hits
falarms <- c()  #Creamos un arreglo vacío para las tasas de Falsas Alarmas
bias_c <- seq(-10,10,0.1)
d_null <- 0  #Como referencia, vamos a incluir una curva ROC para una d' de 0. El sistema a evaluar será juzgado como 'más preciso' conforme su ROC se aleje de ésta función de identidad.
hits_na <- c()     #Creamos un arreglo vacío para los hits en  d' 0
falarms_na <- c()  # Creamos un arreglo vacío para las falsas alarmas en d' 0
for (i in 1:length(bias_c)){                     #Creamos un For donde, para cada posible valor del sesgo C (que relaciona directamente d' con el criterio)
hits[i] <- pnorm((-d/2)-bias_c[i])             #se compute la proporción de la distribución de señal que cae sobre el criterio
falarms[i] <- pnorm((d/2)-bias_c[i])           # y la proporción de la distribución de ruido.
hits_na[i] <- pnorm((d_null/2)-bias_c[i])      #Para referencia, realizamos el mismo cómputo para la d' de 0
falarms_na[i] <- pnorm((-d_null/2)-bias_c[i])
}
plot(fa_rate,h_rate, pch=16, col='deepskyblue4', xlim=c(0,1), ylim=c(0,1), xlab='F.A. Rate', ylab='Hit Rate')     #Ploteamos las tasas de hits y falsas alarmas obervadas como un punto en el espacio
lines(hits,falarms,lwd=2,col='deepskyblue2')        #Dibujamos la curva ROC correspondiente a la d' de nuestro sistema evaluado
lines(hits_na,falarms_na,lwd=1,col='black', lty=2)  #Dibujamos la función de identidad, que corresponde a una d' de 0 (Donde las distribuciones de ruido y señal se empalman por completo)
lines(c(0.38, 0.48),c(0.2,0.2), lwd=2, lty=1, col="deepskyblue3")
points(0.43,0.1, lty=3, pch=16, col='deepskyblue4')
text(0.5, 0.2, labels="All possible trade-offs between Hit & F.A. rates given the d'", offset=0, cex = 0.7, pos=4)
text(0.5, 0.1, labels="Observed Hit & F.A. rates given the used criterion", offset=0, cex = 0.7, pos=4)
text(0.85, 0.83, labels="d' = 0", offset=0, cex = 0.8, pos=4)
text(fa_rate-0.13, h_rate+0.02, paste("d' =", d), offset=0, cex = 0.8, pos=4)
title('ROC')
