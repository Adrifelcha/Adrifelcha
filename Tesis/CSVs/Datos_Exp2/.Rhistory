if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(y[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,x[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(y[,i]),col="red",lwd=2)
}
plot(x,y)
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
p<- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
p
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
p
?rep
FI
TR
TR
?cumsum
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
cumulative
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
cumulative
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- matrix(for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i]))
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- matrixfor (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
matrix <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
View(matrix)
c
c
c
c
c
c
c
C
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
#C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
gd
setwd("C:/Users/Alejandro/Desktop/Felisa/Tesis/CSVs/Datos_Exp2")
rm(list=ls())
dir()
#####################################
################
get(dir)
gdir
dir(get)
getdir()
getwd
getwd()
