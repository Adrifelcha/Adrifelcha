ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(y[,i]),col="red",lwd=2)
}
#Staddon's Model 2
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
x <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
y <- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
x[t+1,i]<-kN*x[t,i]+(FI[t]*kR*(1-x[t,i]))
y[t,i]<-rbinom(1,1,x[t,i])
}
}
plot(seq(1,trials,1),cumsum(y[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(y[,i]),col="red",lwd=2)
}
plot(x,y)
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
p<- matrix(rnorm(trials*sim,0,1),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,1),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 1
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
p
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
p
?rep
FI
TR
TR
?cumsum
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
cumulative
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
cumulative
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- matrix(for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i]))
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
cumulative <- matrixfor (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
matrix <- for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
View(matrix)
c
c
c
c
c
c
c
C
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
#C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#Staddon's Model 1
rm(list=ls())
### Model parameters ###
kN<- 0.9
kR<- 0.9
trials <- 301
sim <- 4
p<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Probability of choosing "Right"
C<- matrix(rnorm(trials*sim,0,0),ncol=sim) #Choices in option "Right"
FI_value<- 10 #Fix Interval value
#Creating the FI schedule
FI<-rep(0,FI_value-1)
FI[FI_value]<-1
TR<-as.integer(trials/FI_value) #Total reinforcements
FI<-rep(FI,TR)
if(length(FI)!=trials){
FI[length(FI):trials]<-0
}
for (t in 1:trials){
for (i in 1:sim){
p[t+1,i]<-kN*p[t,i]+(FI[t]*kR*(1-p[t,i]))
C[t,i]<-rbinom(1,1,p[t,i])
}
}
plot(seq(1,trials,1),cumsum(C[,1]),type="n",col="red",lwd=2,
ylim=c(0,200), axes=F, xlab="Tiempo",ylab="Respuestas acumuladas")
axis(1,at=seq(0,trials,10))
axis(2,at=seq(0,200,30))
for(i in 1:sim){
lines(seq(1,trials),cumsum(C[,i]),col="red",lwd=2)
}
#########################
#               Hits y FA por Tamaño Circulo Central
####################################################
rm(list=ls())
layout(matrix(1:2,ncol=2, byrow=TRUE))
for(archive in dir()){
jaime <- read.csv(archive)
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$tamano_central))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$tamano_central==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$tamano_central==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
barplot( hits[c(4,5,6,7)], main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, ann= FALSE,  col =c("dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("Over-1", "Over-2", "Under-1", "Under-2"))
text(0.7,hits[4]+5,paste(hits[4]),cex=1,col='blue4',f=1)
text(1.9,hits[5]+5,paste(hits[5]),cex=1,col='blue4',f=1)
text(3.1,hits[6]+5,paste(hits[6]),cex=1,col='blue4',f=1)
text(4.3,hits[7]+5,paste(hits[7]),cex=1,col='blue4',f=1)
mtext("Type of Illusion presented", side = 1, line = 2.5, cex = 1, font = 2)
mtext("Hits", side = 2, line = 3, cex = 1, font = 2, las = 0)
mtext('Hits per Illusion',3,cex=1.2, font=2)
barplot(fa[c(1,2,3,8)], main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col =c("firebrick1", "firebrick2", "firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("1.0", "1,5", "2.5", "3.0"))
text(0.7,fa[1]+5,paste(fa[1]),cex=1,col='brown4',f=1)
text(1.9,fa[2]+5,paste(fa[2]),cex=1,col='brown4',f=1)
text(3.1,fa[3]+5,paste(fa[3]),cex=1,col='brown4',f=1)
text(4.3,fa[8]+5,paste(fa[8]),cex=1,col='brown4',f=1)
mtext("Central Circle to compare size", side = 1, line = 2.5, cex = 1, font = 2)
mtext("False Alarms", side = 2, line = 3, cex = 1, font = 2, las = 0)
title(archive, outer = TRUE, font=1, line = -1)
mtext('F. Alarms per Size (Central)',3,cex=1.2, font=2)
}
####################################
# Ploteo de Datos
# EXPERIMENTO 2 (Una Ebbinghaus)
####################################
setwd("C:/Users/Alejandro/Desktop/Felisa/Tesis/CSVs/Datos_Exp2")
rm(list=ls())
dir()
##############################
###############
#               Hits y FA por Tamaño Circulo Central
####################################################
rm(list=ls())
layout(matrix(1:2,ncol=2, byrow=TRUE))
for(archive in dir()){
jaime <- read.csv(archive)
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$tamano_central))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$tamano_central==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$tamano_central==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
barplot( hits[c(4,5,6,7)], main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, ann= FALSE,  col =c("dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("Over-1", "Over-2", "Under-1", "Under-2"))
text(0.7,hits[4]+5,paste(hits[4]),cex=1,col='blue4',f=1)
text(1.9,hits[5]+5,paste(hits[5]),cex=1,col='blue4',f=1)
text(3.1,hits[6]+5,paste(hits[6]),cex=1,col='blue4',f=1)
text(4.3,hits[7]+5,paste(hits[7]),cex=1,col='blue4',f=1)
mtext("Type of Illusion presented", side = 1, line = 2.5, cex = 1, font = 2)
mtext("Hits", side = 2, line = 3, cex = 1, font = 2, las = 0)
mtext('Hits per Illusion',3,cex=1.2, font=2)
barplot(fa[c(1,2,3,8)], main = "", xlab = "", ylab = " ", ylim = c(0, 100), axes = FALSE, col =c("firebrick1", "firebrick2", "firebrick3", "firebrick4"))
axis(2,at=c(0, 20, 40, 60, 80, 100),labels=c("0", "20", "40","60","80","100"),las=1)
axis(1,at=c(0.7,1.9,3.1,4.3),labels=c("1.0", "1,5", "2.5", "3.0"))
text(0.7,fa[1]+5,paste(fa[1]),cex=1,col='brown4',f=1)
text(1.9,fa[2]+5,paste(fa[2]),cex=1,col='brown4',f=1)
text(3.1,fa[3]+5,paste(fa[3]),cex=1,col='brown4',f=1)
text(4.3,fa[8]+5,paste(fa[8]),cex=1,col='brown4',f=1)
mtext("Central Circle to compare size", side = 1, line = 2.5, cex = 1, font = 2)
mtext("False Alarms", side = 2, line = 3, cex = 1, font = 2, las = 0)
title(archive, outer = TRUE, font=1, line = -1)
mtext('F. Alarms per Size (Central)',3,cex=1.2, font=2)
}
