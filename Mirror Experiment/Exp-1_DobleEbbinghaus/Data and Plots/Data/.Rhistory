x<-y*n
#########################
rm(list=ls())
#Ejemplo 2: Power vs Exponential functions on Forgetting data
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-y*n
plot(t,y)
rm(list=ls())
#Ejemplo 2: Power vs Exponential functions on Forgetting data
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-y*n
plot(m,y)
rm(list=ls())
#Ejemplo 2: Power vs Exponential functions on Forgetting data
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-y*n
plot(t,y,xlab='ProporciÃ³n de respuestas correctas',ylab='Tiempo (segundos)')
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
#Powerfunction =
logLik_Power <- function(param) {
#casos <-param[2]
p_wt <-param[1]
#w2 <-param[2]
sum(dbinom(x,100, prob=p_wt, log= TRUE))
}
mle<- maxLik(logLik=logLikFun, start=c(w=0.1))
summary(mle)
rm(list=ls())
#Ejemplo 2: Power vs Exponential functions on Forgetting data
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
#Powerfunction =
logLik_Px1 <- function(param) {
#casos <-param[2]
p_wt <-param[1]
#w2 <-param[2]
sum(dbinom(x,100, prob=p_wt, log= TRUE))
}
mle<- maxLik(logLik=logLik_Px1, start=c(p_wt=0.1))
summary(mle)
rm(list=ls())
#Ejemplo 2: Power vs Exponential functions on Forgetting data
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
#P(wt)= Xtodas
logLik_Px <- function(param) {
#casos <-param[2]
p_wt <-param[1]
#w2 <-param[2]
sum(dbinom(x,100, prob=p_wt, log= TRUE))
}
logLik_Px1 <- function(param) {
#casos <-param[2]
p_wt1 <-param[1]
#w2 <-param[2]
sum(dbinom(94,100, prob=p_wt1, log= TRUE))
}
mle<- maxLik(logLik=logLik_Px1, start=c(p_wt1=0.1))
summary(mle)
rm(list=ls())
library(maxLik)
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(w1,w2){
sum(x*log((w1*t)^(-w2))+(n-x)*log(1-((w1*t)^(-w2))))
}
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
summary(mle)
library("likelihood", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
pow_mod<- function(w1,w2){
sum(x*log((w1*t)^(-w2))+(n-x)*log(1-((w1*t)^(-w2))))
}
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
summary(mle)
library("stats4", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
rm(list=ls())
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(w1, w2){
sum((x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2)))))
}
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
summary(mle)
x<-rbinom(100,n=100,prob=.3)
x<-c(94, 77, 40, 26, 24, 16)
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
rm(list=ls())
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(w1, w2){
lik<-c()
w1<-w1
w2<-w2
lik<-(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-sum(lik))
}
pow_mod<- function(w1, w2){
lik<-c()
w1<-w1
w2<-w2
lik<-(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-sum(lik))
}
power_mle<-mle(pow_mod, start=list(w1=0.1, w2=0.1), method="L-BFGS-B", lower= c(0.01, 0.01), upper=c(Inf,Inf))
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
rm(list=ls())
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(w1, w2){
lik<-c()
w1<-w1
w2<-w2
lik<-((x*log((w1*t)^-w2))+((n-x)*log(1-(w1*t)^-w2)))
#(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-sum(lik))
}
power_mle<-mle(pow_mod, start=list(w1=0.1, w2=0.1), method="L-BFGS-B", lower= c(0.01, 0.01), upper=c(Inf,Inf))
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
pow_mod<- function(w1, w2){
lik<-c()
w1<-w1
w2<-w2
lik<-sum(((x*log((w1*t)^-w2))+((n-x)*log(1-(w1*t)^-w2))))
#(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(lik)
}
power_mle<-mle(pow_mod, start=list(w1=0.1, w2=0.1), method="L-BFGS-B", lower= c(0.01, 0.01), upper=c(Inf,Inf))
power_mle<-mle(pow_mod, start=list(w1=0.1, w2=0.1), method="L-BFGS-B", lower= c(0.001, 0.001), upper=c(100,100))
pow_mod<- function(w1, w2){
lik<-c()
w1<-w1
w2<-w2
lik<-sum(((y*log((w1*t)^-w2))+((n-y)*log(1-(w1*t)^-w2))))
#(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-lik)
}
power_mle<-mle(pow_mod, start=list(w1=0.1, w2=0.1), method="L-BFGS-B", lower= c(0.001, 0.001), upper=c(100,100))
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
pow_mod
mle<- maxLik(logLik=pow_mod, start=c(w1=0.1, w2=0.1))
rm(list=ls())
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(wa, wb){
lik<-c()
wa<-wa
wb<-wb
lik<-sum(((y*log((wa*t)^-wb))+((n-y)*log(1-(wa*t)^-wb))))
#(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-lik)
}
power_mle<-mle(pow_mod, start=list(wa=0.1, wb=0.1), method="L-BFGS-B", lower= c(0.001, 0.001), upper=c(100,100))
mle<- maxLik(logLik=pow_mod, start=c(wa=0.1, wb=0.1))
power_mle<-mle(pow_mod, start=list(wa=0.1, wb=0.1), method="L-BFGS")
power_mle<-mle(pow_mod, start=list(wa=0.1, wb=0.1), method="L-BFGS")
onential -> x es el exponente
library(maxLik)
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(94, 77, 40, 26, 24, 16)
pow_mod<- function(wa, wb){
lik<-c()
wa<-wa
wb<-wb
lik<-sum(((y*log((wa*t)^-wb))+((n-y)*log(1-(wa*t)^-wb))))
#(x*log((w1*t)^(-w2)))+((n-x)*log(1-((w1*t)^(-w2))))
return(-lik)
}
power_mle<-mle(pow_mod, start=list(wa=0.1, wb=0.1), method="L-BFGS")
mle<- maxLik(logLik=pow_mod, start=c(wa=0.1, wb=0.1))
summary(mle)
m(list=ls())
library(maxLik,stats4)
#First: We generate a vector of data (x)
#random values unique to a specific seed. It ensures reproducibility)
set.seed(123)
x<-rbinom(100,n=100,prob=.3)
logLikFun <- function(param) {
w <-param
sum(dbinom(x,100, prob=w, log= TRUE))
}
mle<- maxLik(logLik=logLikFun, start=c(w=0.1))
summary(mle)
rm(list=ls())
library(maxLik)
#Power -> X se eleva a una potencia fija
#Exponential -> x es el exponente
#Escribimos nuestros datos
t<-c(1,3,6,9,12,18)
m<-6
y<-c(.94, .77, .40, .26, .24, .16)
n<-100
x<-c(y*n)
plot(t,y,xlab='Proporcion de respuestas correctas',ylab='Tiempo (segundos)')
axis(1,at=c(1:18),labels=c("1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"),las=1)
text(15,.8,paste("Datos"),cex=1,f=1)
#Pow_mod<-w1_p*t^(-w2_p)
#Exp_mod<-w1_e^(-w2_e*t)
logLik_Pow <- function(w){
w1p <-w[1]
w2p <-w[2]
sum(dbinom(x=c(x),100, prob=w1p*t^-w2p, log= TRUE))
}
mle_Pow<- maxLik(logLik=logLik_Pow, start=c(0.1, 0.01))
summary(mle_Pow)
logLik_Exp <- function(we) {
w1e <-we[1]
w2e <-we[2]
sum(dbinom(x=c(x),100, prob=w1e*exp(-w2e*t), log= TRUE))
}
mle_Exp<- maxLik(logLik=logLik_Exp, start=c(1, .13))
summary(mle_Exp)
setwd("~/Desktop/Felisa/Mirror Experiment/Exp-1_DobleEbbinghaus/Data and Plots/Data")
rm(list=ls())
dir()
#archive <-'MirrorEx1a_Elias_2016-05-05_Y_N+R.csv'
for(archive in dir()){
felisa <- read.csv(archive)
felisa <- felisa[1:800,]
# Codificacion Estimulos
# Estimulo 1-200 senalfacil/AS
# Estimulo 201-400 ruidofacil/AN
# Estimulo 401-600 senaldificil/BS
# Estimulo 601-800 ruidodificil/BN
facilidad <- NULL
senal <- NULL
tamano_centrales <- NULL
num_circulos_externos <- NULL
pos_externos_grandes <- NULL
facilidad[felisa$Estimulo<=400] <- 'pocos'
facilidad[felisa$Estimulo>400] <- 'muchos'
senal[(felisa$Estimulo>=1&felisa$Estimulo<=200)|(felisa$Estimulo>=401&felisa$Estimulo<=600)] <- 'senal'
senal[(felisa$Estimulo>=201&felisa$Estimulo<=400)|(felisa$Estimulo>=601&felisa$Estimulo<=800)] <- 'ruido'
tamano_centrales[(felisa$Estimulo>=1&felisa$Estimulo<=40)|(felisa$Estimulo>=401&felisa$Estimulo<=440)] <- '3, 3'
tamano_centrales[(felisa$Estimulo>=41&felisa$Estimulo<=80)|(felisa$Estimulo>=441&felisa$Estimulo<=480)] <- '2.5, 2.5'
tamano_centrales[(felisa$Estimulo>=81&felisa$Estimulo<=120)|(felisa$Estimulo>=481&felisa$Estimulo<=520)] <- '2, 2'
tamano_centrales[(felisa$Estimulo>=121&felisa$Estimulo<=160)|(felisa$Estimulo>=521&felisa$Estimulo<=560)] <- '1.5, 1.5'
tamano_centrales[(felisa$Estimulo>=161&felisa$Estimulo<=200)|(felisa$Estimulo>=561&felisa$Estimulo<=600)] <- '1, 1'
tamano_centrales[(felisa$Estimulo>=201&felisa$Estimulo<=240)|(felisa$Estimulo>=601&felisa$Estimulo<=640)] <- '2.5, 3'
tamano_centrales[(felisa$Estimulo>=241&felisa$Estimulo<=280)|(felisa$Estimulo>=641&felisa$Estimulo<=680)] <- '2, 2.5'
tamano_centrales[(felisa$Estimulo>=281&felisa$Estimulo<=320)|(felisa$Estimulo>=681&felisa$Estimulo<=720)] <- '1.5, 2'
tamano_centrales[(felisa$Estimulo>=321&felisa$Estimulo<=360)|(felisa$Estimulo>=721&felisa$Estimulo<=760)] <- '1, 1.5'
tamano_centrales[(felisa$Estimulo>=361&felisa$Estimulo<=400)|(felisa$Estimulo>=761&felisa$Estimulo<=800)] <- '2.5, 1.5'
pos_externos_grandes[felisa$Estimulo%%2==1] <- 'derecha' #nones
pos_externos_grandes[felisa$Estimulo%%2==0] <- 'izquierda'
orden_externos <- function(tamanos_centrals){
return(
data.frame(
estim=felisa$Estimulo[tamano_centrales==tamanos_centrals],
label=rep(c(rep('2-2',10),rep('3-3',10),rep('2-3',10),rep('3-2',10)),2)[order(order(felisa$Estimulo[tamano_centrales==tamanos_centrals]))],
posicion_global=which(tamano_centrales==tamanos_centrals)
)
)
}
for(tam in unique(tamano_centrales)){
extra <- orden_externos(tam)
num_circulos_externos[extra$posicion_global] <- as.character(extra$label)
}
felisa$facilidad <- facilidad
felisa$num_circulos_externos <- num_circulos_externos
felisa$pos_externos_grandes <- pos_externos_grandes
felisa$tamano_centrales <- tamano_centrales
felisa$senal <- senal
head(felisa,50)
write.csv(felisa,file=archive)
}
#is.recursive(felisa)
############################
############################
# Hits y Falsas alarmas x  No. Circulos externos
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
index <- which(jaime$facilidad=='muchos')
for(i in index){
jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
}
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$num_circulos_externos))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$num_circulos_externos==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
plot(hits,type='o',pch=16,col='blue',ylim=c(0,60),axes=F , ann = F )
axis(1,at=1:8,labels=sort(unique(jaime$num_circulos_externos)))
points(fa,type='o',pch=16,col='red')
mtext(archive,3,cex=.8)
}
############################
###########################
###########################
#Hits y Falsas Alarmas  x Tama?o Circulo Central
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
fa <- NULL
hits <- NULL
for(nce in sort(unique(jaime$tamano_centrales))){
fa <- append(fa, sum(jaime$Falsas.alarmas[jaime$tamano_centrales==nce]=='True'))
hits <- append(hits,sum(jaime$Hits[jaime$tamano_centrales==nce]=='True'))
print(c(nce,
fa[length(fa)],
hits[length(hits)]))
}
plot(hits,type='o',pch=16,col='blue',ylim=c(0,80),axes=F , ann=F)
axis(1,at=1:10,labels=sort(unique(jaime$tamano_centrales)))
points(fa,type='o',pch=16,col='red')
mtext(archive,3,cex=.8)
}
#####################################
#####################################
#####################################
#Hits y FA por Tama?o Central; across No. Circulos externos
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
# archive <- dir()[3]
jaime <- read.csv(archive)
jaime$num_circulos_externos <- as.character(jaime$num_circulos_externos)
cafe <- strsplit(as.character(jaime$num_circulos_externos),split='-')
index <- which(jaime$facilidad=='muchos')
for(i in index){
jaime$num_circulos_externos[i] <- paste(as.numeric(cafe[[i]])+5,collapse = '-')
}
fa <- array(dim=c(10,8))
hits <- array(dim=c(10,8))
c_nce <- 0
for(nce in sort(unique(jaime$num_circulos_externos))){
c_nce <- c_nce+1
c_tc <- 0
for(tc in sort(unique(jaime$tamano_centrales))){
c_tc <- c_tc+1
fa[c_tc,c_nce] <- sum(jaime$Falsas.alarmas[jaime$num_circulos_externos==nce&jaime$tamano_centrales==tc]=='True')
hits[c_tc,c_nce] <- sum(jaime$Hits[jaime$num_circulos_externos==nce&jaime$tamano_centrales==tc]=='True')
}
}
plot(0,type='n',xlim=c(-1,10),ylim=c(0,10),axes=F, ann=F)
axis(1,at=1:8,labels=sort(unique(jaime$num_circulos_externos)))
for(f in 1:nrow(fa)){
lines(1:8,fa[f,],col='red',type='o',pch=16)
text(0,fa[f,1],sort(unique(jaime$tamano_centrales))[f],col='red')
text(9,fa[f,8],sort(unique(jaime$tamano_centrales))[f],col='red')
}
for(h in 1:nrow(hits)){
lines(1:8,hits[h,],col='blue',type='o',pch=16)
#     text(0,hits[h,1],sort(unique(jaime$tamano_centrales))[h],col='blue')
#     text(9,hits[h,8],sort(unique(jaime$tamano_centrales))[h],col='blue')
}
mtext(archive,3,cex=.8)
}
#######################
######################
######################
#Response Time (1 y 2) across trials
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$Ensayo <- as.character(jaime$Ensayo)
cafe <- strsplit(as.character(jaime$Ensayo),split='-')
plot(jaime$RTime1,type='o',pch=16, col='purple',ylim=c(0,10),axes=F , ann = F )
axis(1,at=1:800,labels=sort(unique(jaime$Ensayo)))
axis(2,at=0:10,labels=c("0", "1","2","3","4","5","6","7","8","9","10"))
points(jaime$RTime2,type='o', lty=3, pch=16, col='brown')
mtext(archive,3,cex=.8)
}
################################
################################
#RT en Intervalos de 200 ensayos.
rm(list=ls())
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$Ensayo <- as.character(jaime$Ensayo)
cafe <- strsplit(as.character(jaime$Ensayo),split='-')
plot(jaime$RTime1[1:200],type='o',pch=16, col='red',ylim=c(1,10),axes=F , ann = F )
axis(1,at=1:200,labels=c(1:200))
axis(2,at=0:10,labels=c("0", "1","2","3","4","5","6","7","8","9","10"))
points(jaime$RTime1[201:400],type='o', lty=3, pch=16, col='blue')
points(jaime$RTime1[401:600],type='o', lty=3, pch=16, col='green')
points(jaime$RTime1[601:800],type='o', lty=3, pch=16, col='orange')
#points(jaime$RTime1[401:500],type='o', lty=3, pch=16, col='violet')
#points(jaime$RTime1[501:600],type='o', lty=3, pch=16, col='orange')
#points(jaime$RTime1[601:700],type='o', lty=3, pch=16, col='black')
#points(jaime$RTime1[701:800],type='o', lty=3, pch=16, col='pink')
text(170,9.5,paste("1"),cex=1,col='red',f=2)
text(170,9,paste("2"),cex=1,col='blue',f=2)
text(170,8.5,paste("3"),cex=1,col='green',f=2)
text(170,8,paste("4"),cex=1,col='orange',f=2)
mtext(archive,3,cex=.8)
}
####################################################
####################################################
##################### Aciertos y errores x Ensayo
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$Ensayo <- as.character(jaime$Ensayo)
cafe <- strsplit(as.character(jaime$Ensayo),split='-')
plot(jaime$Aciertos,type='o',pch=16, col='green',ylim=c(0,800),axes=F , ann = F )
axis(1,at=1:800,labels=sort(unique(jaime$Ensayo)))
#axis(2,at=0:10,labels=c("0", "1","2","3","4","5","6","7","8","9","10"))
points(jaime$Errores,type='o', lty=3, pch=16, col='red')
mtext(archive,3,cex=.8)
}
#############################################
#############################################
######### Contadores x Ensayo
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$Ensayo <- as.character(jaime$Ensayo)
cafe <- strsplit(as.character(jaime$Ensayo),split='-')
plot(jaime$ContadorH,type='o',pch=16, col='blue',ylim=c(0,400),axes=F , ann = F )
axis(1,at=1:800,labels=sort(unique(jaime$Ensayo)))
#axis(2,at=0:10,labels=c("0", "1","2","3","4","5","6","7","8","9","10"))
points(jaime$ContadorF,type='o', lty=3, pch=16, col='red')
points(jaime$ContadorM,type='o', lty=3, pch=16, col='purple')
points(jaime$ContadorR,type='o', lty=3, pch=16, col='green')
text(810,jaime$ContadorF[799]+20,paste("FA"),cex=1,col='red',f=2)
text(810,jaime$ContadorM[799]+20,paste("M"),cex=1,col='purple',f=2)
text(810,jaime$ContadorR[799]+20,paste("R"),cex=1,col='green',f=2)
text(810,jaime$ContadorH[799]+20,paste("H"),cex=1,col='blue',f=2)
mtext(archive,3,cex=.8)
}
rm(list=ls())
layout(matrix(1:4,ncol=2))
for(archive in dir()){
jaime <- read.csv(archive)
jaime$Ensayo <- as.character(jaime$Ensayo)
cafe <- strsplit(as.character(jaime$Ensayo),split='-')
plot(jaime$ContadorH,type='o', lwd=1, pch=16, col='blue',ylim=c(0,400),axes=F , ann = F )
axis(1,at=1:800,labels=sort(unique(jaime$Ensayo)))
#axis(2,at=0:10,labels=c("0", "1","2","3","4","5","6","7","8","9","10"))
points(jaime$ContadorF,type='o', lty=3, lwd=1, pch=16, col='red')
points(jaime$ContadorM,type='o', lty=3, lwd=1, pch=16, col='purple')
points(jaime$ContadorR,type='o', lty=3, lwd=1, pch=16, col='green')
text(810,jaime$ContadorF[799]+20,paste("FA"),cex=1,col='red',f=2)
text(810,jaime$ContadorM[799]+20,paste("M"),cex=1,col='purple',f=2)
text(810,jaime$ContadorR[799]+20,paste("R"),cex=1,col='green',f=2)
text(810,jaime$ContadorH[799]+20,paste("H"),cex=1,col='blue',f=2)
mtext(archive,3,cex=.8)
}
